using Attendance.Models;
using Attendance.Readers;
using Attendance.Services;
using Attendance.ViewModels;
using AttendanceRecord.Readers;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace Attendance
{
    /// <summary>
    /// AttWindow.xaml 的交互逻辑
    /// </summary>
    public partial class AttWindow : UserControl
    {
        public event Action<Attendance<DateSplitAttRecord>> SelectedChange;

        public AttWindow()
        {
            InitializeComponent();
            this.DataContext = new AttViewModel();
        }

        private IEnumerable<Attendance<DateSplitAttRecord>> InitAttendances(string[] files)
        {
            var service = new AttendanceService();
            var allRecords = service.GetAttRecords(files);

            var Attendances = service.SplitAttsByName(allRecords, DateTime.Parse("2020/08/01"));
            return Attendances;
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            RenameColumn(dgAttendance.Columns);
        }

        private void RenameColumn(ObservableCollection<DataGridColumn> columns)
        {
            Sys.Columns.Attendance.OrderBy(x => x.Value.order).ToList().ForEach(x =>
            {
                try
                {
                    var col = columns.Where(c => c.Header.ToString() == x.Key).First();
                    col.DisplayIndex = x.Value.order;
                    col.Header = x.Value.description;
                }
                catch (Exception)
                {
                }
            });
        }

        private void DgAttendance_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            AutoGenColumns(e);
        }

        private void AutoGenColumns(DataGridAutoGeneratingColumnEventArgs e)
        {
            try
            {
                var config = Sys.Columns.Attendance.Where(x => x.Key == e.PropertyName).First();

                if (e.PropertyName == "Name")
                {
                    var style = new Style(typeof(TextBlock));
                    style.Setters.Add(new EventSetter(Hyperlink.ClickEvent, (RoutedEventHandler)EventSetter_OnHandler));
                    var column = new DataGridHyperlinkColumn { Header = config.Value.description, Binding = new Binding("Name"), ElementStyle = style };
                    e.Column = column;
                    return;
                }
                if (!config.Value.visiable)
                    e.Cancel = true;
            }
            catch (Exception)
            {

            }

        }


        void EventSetter_OnHandler(object sender, RoutedEventArgs e)
        {
            //var destination = ((Hyperlink)e.OriginalSource).NavigateUri.OriginalString;
            var context = (Attendance<DateSplitAttRecord>)(sender as TextBlock).DataContext;
            SelectedChange?.Invoke(context);
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            var context = (AttViewModel)this.DataContext;
            OpenFileDialog fileDialog = new OpenFileDialog();
            fileDialog.Filter = "Excel Files|*.xls;*.xlsx;";
            fileDialog.Title = "选择导入的文件";
            fileDialog.RestoreDirectory = true;
            fileDialog.Multiselect = true;
            if (fileDialog.ShowDialog() == true)
            {
                var files = new List<string>(fileDialog.FileNames.Select(x => new FileInfo(x).Name));
                context.InputFiles.Clear();
                files.ForEach(context.InputFiles.Add);

                var attendances = InitAttendances(fileDialog.FileNames);
                attendances.ToList().ForEach(context.Attendances.Add);
            }
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {

        }

        private void Button_Click_2(object sender, RoutedEventArgs e)
        {
            var context = (AttViewModel)this.DataContext;
            OpenFileDialog fileDialog = new OpenFileDialog();
            fileDialog.Filter = "Excel Files|*.xls;*.xlsx;";
            fileDialog.Title = "选择导入的文件";
            fileDialog.RestoreDirectory = true;
            fileDialog.Multiselect = false;
            if (fileDialog.ShowDialog() == true)
            {
                var file = fileDialog.FileName;
                context.TargetPath = file;
            }
        }

        private void Button_Click_3(object sender, RoutedEventArgs e)
        {
            var context = (AttViewModel)this.DataContext;

            AttResultReader resultReader = new AttResultReader();
            var result =  resultReader.GetRecords(context.TargetPath);
            result.ForEach(x =>
            {
                var attendance = context.Attendances.Where(y => y.Name == x.Name).FirstOrDefault();
                if (attendance != null)
                {
                    x.DaysOfAtt = attendance.DaysOfAtt;
                    x.DaysOfLateOrEarly = attendance.DaysOfLate + attendance.DaysOfEarly;
                    x.DaysOfLeave = attendance.DaysOfLeave;
                }
            });

            resultReader.InjectResult(result, context.TargetPath);
            MessageBox.Show("已成功注入","提示");
        }
    }
}
